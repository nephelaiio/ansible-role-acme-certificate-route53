---
- name: include variable overrides
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "vars/{{ ansible_distribution }}.yml"
        - "vars/{{ ansible_os_family }}.yml"
      skip: true

- name: install package requirements
  package:
    name: "{{ acme_certificate_packages }}"

- name: create acme group
  group:
    name: "{{ acme_certificate_group }}"

- name: add users to acme group
  user:
    name: "{{ item }}"
    groups: "{{ acme_certificate_group }}"
    append: yes
  loop: "{{ acme_certificate_group_members | flatten(levels=1) }}"

- name: create acme folders
  file:
    path: "{{ item }}"
    mode: 0755
    state: directory
    group: "{{ acme_certificate_group }}"
  loop:
    - "{{ acme_certificate_certdir }}"
    - "{{ acme_certificate_keydir }}"

- name: create key
  shell: |
    ssh-keygen -t rsa -b 2048 -q \
      -C "{{ acme_certificate_email }}" \
      -f {{ acme_certificate_account_keyfile }} -N ""
  args:
    creates: "{{ acme_certificate_account_keyfile }}"  # noqa 305

- name: create domain key
  shell: |
    ssh-keygen -t rsa -b 2048 -q \
      -C "{{ acme_certificate_email }}" \
      -f {{ _acme_certificate_domain_keyfile }} \
      -N ""
  args:
    creates: "{{ _acme_certificate_domain_keyfile }}"  # noqa 305

- name: create csr
  shell: |
    openssl req -new -nodes \
      -key {{ _acme_certificate_domain_keyfile }} \
      -out {{ _acme_certificate_domain_csrfile }} \
      -subj "/CN={{ acme_certificate_domain }}"
  changed_when: false  # noqa 305

- name: create challenge
  acme_certificate:
    account_key: "{{ acme_certificate_account_keyfile }}"
    challenge: dns-01
    csr: "{{ _acme_certificate_domain_csrfile }}"
    dest: "{{ _acme_certificate_domain_crtfile }}"
    fullchain_dest: "{{ _acme_certificate_domain_chainfile }}"
    terms_agreed: yes
  register: acme_certificate_challenge

- name: install route53 dependencies
  pip:
    name: boto

- name: create route53 txt record for certificate validation
  route53:
    command: create
    aws_access_key: "{{ acme_certificate_aws_accesskey_id }}"
    aws_secret_key: "{{ acme_certificate_aws_accesskey_secret }}"
    zone: "{{ acme_certificate_zone }}"
    record: "{{ acme_certificate_challenge.challenge_data[acme_certificate_domain]['dns-01']['resource'] }}.{{ acme_certificate_domain }}"
    retry_interval: 300
    type: TXT
    ttl: 7200
    value: '"{{ acme_certificate_challenge.challenge_data[acme_certificate_domain]["dns-01"]["resource_value"] }}"'
    wait: yes
    overwrite: yes
  when: "'challenge_data' in acme_certificate_challenge"

- name: wait for txt record propagation
  pause:
    seconds: 60
  when: "'challenge_data' in acme_certificate_challenge"

- name: validate challenge
  acme_certificate:
    account_key: "{{ acme_certificate_account_keyfile }}"
    challenge: dns-01
    csr: "{{ _acme_certificate_domain_csrfile }}"
    dest: "{{ _acme_certificate_domain_crtfile }}"
    fullchain_dest: "{{ _acme_certificate_domain_chainfile }}"
    data: "{{ acme_certificate_challenge }}"
    terms_agreed: yes
    acme_directory: "{{ acme_certificate_directory }}"
  when: "'challenge_data' in acme_certificate_challenge"

- name: delete route53 txt record for certificate validation
  route53:
    command: delete
    aws_access_key: "{{ acme_certificate_aws_accesskey_id }}"
    aws_secret_key: "{{ acme_certificate_aws_accesskey_secret }}"
    zone: "{{ acme_certificate_zone }}"
    record: "{{ acme_certificate_challenge.challenge_data[acme_certificate_domain]['dns-01']['resource'] }}.{{ acme_certificate_zone }}"
    retry_interval: 300
    type: TXT
    ttl: 7200
    value: '"{{ acme_certificate_challenge.challenge_data[acme_certificate_domain]["dns-01"]["resource_value"] }}"'
    wait: yes
  when: "'challenge_data' in acme_certificate_challenge"
  ignore_errors: yes

- name: manage keyfile permissions
  file:
    path: "{{ _acme_certificate_domain_keyfile }}"
    owner: root
    group: "{{ acme_certificate_group }}"
    mode: 0640
    state: file

- name: retrieve acme root ca file
  get_url:
    url: "{{ acme_certificate_caurl }}"
    dest: "{{ acme_certificate_certdir }}/{{ _acme_certificate_cafile }}"
    mode: 0644

- name: retrieve acme intermediate ca file
  get_url:
    url: "{{ acme_certificate_intcaurl }}"
    dest: "{{ acme_certificate_certdir }}/{{ _acme_certificate_intcafile }}"
    mode: 0644

- block:

    - name: create acme ca root dir
      file:
        state: directory
        dest: "{{ acme_certificate_storedir }}"

    - name: copy acme root ca file to trust store
      copy:
        mode: preserve
        remote_src: yes
        src: "{{ acme_certificate_certdir }}/{{ _acme_certificate_cafile }}"
        dest: "{{ acme_certificate_storedir }}/{{ _acme_certificate_cafile }}"

    - name: update ca certificates
      command: update-ca-certificates
      changed_when: false
      when: ansible_os_family == 'Debian'

    - name: update ca certificates
      command: update-ca-trust extract
      changed_when: false
      when: ansible_os_family == 'RedHat'

  when: acme_certificate_add_ca

- name: set certificate file link
  file:
    state: link
    src: "{{ _acme_certificate_domain_crtfile }}"
    dest: "{{ acme_certificate_file }}"
  when: acme_certificate_file is defined

- name: set certificate chain link
  file:
    state: link
    src: "{{ _acme_certificate_domain_chainfile }}"
    dest: "{{ acme_certificate_chainfile }}"
  when: acme_certificate_chainfile is defined

- name: set certificate key link
  file:
    state: link
    src: "{{ _acme_certificate_domain_keyfile }}"
    dest: "{{ acme_certificate_keyfile }}"
  when: acme_certificate_keyfile is defined

- name: set ca file link
  file:
    state: link
    src: "{{ acme_certificate_certdir }}/{{ _acme_certificate_cafile }}"
    dest: "{{ acme_certificate_cafile }}"
  when: acme_certificate_cafile is defined

- name: set intca file link
  file:
    state: link
    src: "{{ acme_certificate_certdir }}/{{ _acme_certificate_intcafile }}"
    dest: "{{ acme_certificate_intcafile }}"
  when: acme_certificate_intcafile is defined
